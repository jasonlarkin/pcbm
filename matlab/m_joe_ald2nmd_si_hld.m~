function sedald = m_joe_ald2nmd_si_hld( NUM_KPTS, kptmodelist , NUM_MODES , hld )
%sedald = m_joe_ald2nmd( nmd , sed , ald )
%sort joe ald to my nmd

NUM_KPTS

for ikpt = 1:NUM_KPTS
    
    I = find(...
        abs(kptmodelist((ikpt-1)*NUM_MODES+1,1))==abs(ald.kpt(:,1)) &...
        abs(kptmodelist((ikpt-1)*NUM_MODES+1,2))==abs(ald.kpt(:,2)) &...
        abs(kptmodelist((ikpt-1)*NUM_MODES+1,3))==abs(ald.kpt(:,3)) );
  
    if length(I)==0
        I = find(...
        abs(kptmodelist((ikpt-1)*NUM_MODES+1,1))==abs(ald.kpt(:,3)) &...
        abs(kptmodelist((ikpt-1)*NUM_MODES+1,2))==abs(ald.kpt(:,1)) &...
        abs(kptmodelist((ikpt-1)*NUM_MODES+1,3))==abs(ald.kpt(:,2)) );
    end
    if length(I)==0
        I = find(...
        abs(kptmodelist((ikpt-1)*NUM_MODES+1,1))==abs(ald.kpt(:,2)) &...
        abs(kptmodelist((ikpt-1)*NUM_MODES+1,2))==abs(ald.kpt(:,3)) &...
        abs(kptmodelist((ikpt-1)*NUM_MODES+1,3))==abs(ald.kpt(:,1)) );
    end
    if length(I)==0
        I = find(...
        abs(kptmodelist((ikpt-1)*NUM_MODES+1,1))==abs(ald.kpt(:,2)) &...
        abs(kptmodelist((ikpt-1)*NUM_MODES+1,2))==abs(ald.kpt(:,1)) &...
        abs(kptmodelist((ikpt-1)*NUM_MODES+1,3))==abs(ald.kpt(:,3)) );
    end
%     I
%     ald.kpt(I(1:NUM_MODES),:)
%     sed.kpt((ikpt-1)*NUM_MODES+1,:)
%     flipdim(ald.life(I(1:NUM_MODES)),1)
%     sed.life((ikpt-1)*NUM_MODES+1:(ikpt)*NUM_MODES)
    
%     plot(...
%         flipdim(ald.life(I(1:NUM_MODES)),1),...
%         flipdim(ald.life(I(1:NUM_MODES)),1),...
%         flipdim(ald.life(I(1:NUM_MODES)),1),...
%         sed.life((ikpt-1)*NUM_MODES+1:(ikpt)*NUM_MODES),'.')

sedald.freq((ikpt-1)*NUM_MODES+1:(ikpt)*NUM_MODES,1) =...
    flipdim(ald.freq(I(1:NUM_MODES)),1);
sedald.life((ikpt-1)*NUM_MODES+1:(ikpt)*NUM_MODES,1) =...
    flipdim(ald.life(I(1:NUM_MODES)),1);
sedald.vel((ikpt-1)*NUM_MODES+1:(ikpt)*NUM_MODES,1:3) =...
    flipdim(ald.vel(I(1:NUM_MODES),1:3),1);

sedald.freq_shift((ikpt-1)*NUM_MODES+1:(ikpt)*NUM_MODES,1) =...
    flipdim(ald.freq_shift(I(1:NUM_MODES)),1);

sedald.kpt((ikpt-1)*NUM_MODES+1:(ikpt)*NUM_MODES,:) =...
    kptmodelist((ikpt-1)*NUM_MODES+1:(ikpt)*NUM_MODES,:);


%--------------------------------------------------------------------------
%pause
%-------------------------------------------------------------------------- 
end

end