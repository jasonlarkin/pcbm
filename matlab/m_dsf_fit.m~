clear
lj = m_lj; constant = m_constant;
str_af = '/home/jason/disorder2/lj/alloy/10K/0.05/10x/work/';

%.eigvec = load(strcat(str_af,'AF_eigvec_1.dat'));
AF.freq = load(strcat(str_af,'AF_freq_1.dat'));
AF.x0 = m_x0_read(str_af,'x0.data');

str_nmd = '/home/jason/disorder2/lj/alloy/10K/0.05/10x/NMD/1/work/';
nmd = load([str_nmd 'NMDdata.mat']);
sed = load([str_nmd 'SEDdata.mat']);

DSF(1).DSF = load([str_af 'DSF_long_100_b2.mat']);
DSF(2).DSF = load([str_af 'DSF_tran_100_b2.mat']);

DSF(3).DSF = load([str_af 'DSF_long_110_b2.mat']);
DSF(4).DSF = load([str_af 'DSF_tran_110_b2.mat']);

DSF(5).DSF = load([str_af 'DSF_long_111_b2.mat']);
DSF(6).DSF = load([str_af 'DSF_tran_111_b2.mat']);

imode=1;

for idir = 1:6

    for ikpt = 1:length(DSF(1).DSF.kpt)
        
        if ikpt<=1
            PT_PERC = 0.0001;
            INV_PERC = 1.0;
        elseif ikpt<=3
            PT_PERC = 0.0001;
            INV_PERC = 0.01;
        else
            PT_PERC = 0.005;
            INV_PERC = 0.01;
        end
        
        [DSF(idir).DSF.kpt(ikpt,1)*nmd.Nx ...
            DSF(idir).DSF.kpt(ikpt,2)*nmd.Ny ...
            DSF(idir).DSF.kpt(ikpt,3)*nmd.Nz ]
        Ikpt =...
            find(...
            DSF(idir).DSF.kpt(ikpt,1)*nmd.Nx == sed.kpt(:,1) & ...
            DSF(idir).DSF.kpt(ikpt,2)*nmd.Ny == sed.kpt(:,2) & ...
            DSF(idir).DSF.kpt(ikpt,3)*nmd.Nz == sed.kpt(:,3) ...
            );
        sed.freq(Ikpt)
%--------------------------------------------------------------------------
%tran
%--------------------------------------------------------------------------
        [Imax,Jmax] = max(...
            DSF(idir).DSF.SL(:,ikpt)...
            );
        [IfindT JfindT] = min(...
            abs(sed.freq(Ikpt) - DSF(idir).DSF.freq_range(Jmax))...
            );
        sed.freq(Ikpt(JfindT))
        sed.life(Ikpt(JfindT))
%Find wleft    
        [I,J] =...
            find(...
            DSF(idir).DSF.SL(1:Jmax,ikpt) ...
            <...
            PT_PERC*DSF(idir).DSF.SL(Jmax,ikpt) );
        wleft = I(length(I))
%Find wright
        [I,J] = find(...
            DSF(idir).DSF.SL(Jmax:length(DSF(idir).DSF.SL),ikpt) ...
            <...
            PT_PERC*DSF(idir).DSF.SL(Jmax,ikpt) );
        wright = Jmax + I(1)
%FIT THE LORENTZIAN(S)
c0 = [ 2*Imax, 0.01, DSF(idir).DSF.freq_range(Jmax) ];

    lb(1:length(c0)) = 0.0; ub(1:3:length(c0)) = 10*Imax; 
    ub(2:3:length(c0)) = 10000; 
    ub(3:3:length(c0)) =....
        DSF(idir).DSF.freq_range(length(DSF(idir).DSF.freq_range));
    weights = ones(length(wleft:wright),1);
    weights(1:30) = INV_PERC/PT_PERC;
    weights(length(weights)-30:length(weights)) = INV_PERC/PT_PERC;
    lor_func = @(c,w)weights.*(c(1))./(1 + ( (w - c(3))./ c(2) ).^2 );
    options =...
        optimset(...
        'MaxIter',5000,'MaxFunEvals',5000,'TolFun',1e-5,'TolX',1e-5); 
    [c_fit] =...
        lsqcurvefit(...
        lor_func,c0,...
        DSF(idir).DSF.freq_range(wleft:wright)',...
        DSF(idir).DSF.SL(wleft:wright,ikpt).*weights,...
        lb,ub,options);
%Store separate liftimes and frequencies for single and MULTIPLE FITS
center=c_fit(3); lifetime=1/(2*c_fit(2));
    semilogy(...
        DSF(idir).DSF.freq_range,DSF(idir).DSF.SL(:,ikpt),...
        DSF(idir).DSF.freq_range(wleft:wright)',...
        lor_func(c0,DSF(idir).DSF.freq_range(wleft:wright)')...
        )
pause
    semilogy(...
        DSF(idir).DSF.freq_range,DSF(idir).DSF.SL(:,ikpt),...
        DSF(idir).DSF.freq_range(wleft:wright)',...
        lor_func(c_fit,DSF(idir).DSF.freq_range(wleft:wright)')...
        )
    DSF_FIT.freq(imode) = center;
    DSF_FIT.life(imode) = lifetime;
    DSF_FIT.freq_sed(imode) = sed.freq(Ikpt(JfindT));
    DSF_FIT.life_sed(imode) = sed.life(Ikpt(JfindT));
    
    imode = imode+1
pause
    end
end

loglog(...
    sed.freq,sed.life,'.',...
    DSF_FIT.freq, DSF_FIT.life,'.',...
    DSF_FIT.freq_sed, DSF_FIT.life_sed,'.',...
    DSF_FIT.freq,2*pi./DSF_FIT.freq,...
    DSF_FIT.freq,(1E4)*1./(DSF_FIT.freq.^4),...
    DSF_FIT.freq,(1E3)*1./(DSF_FIT.freq.^2)...
    )

save(strcat(str_af,'DSF_FIT.mat'), '-struct', 'DSF_FIT');

